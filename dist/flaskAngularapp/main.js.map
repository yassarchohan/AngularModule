{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;ICyBrC,qEACO;IAAA,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACnC,4DAAK;;;IAHM,0DAAkB;IAAlB,kFAAkB;IACd,0DAAiB;IAAjB,iFAAiB;IACb,0DAAW;IAAX,2EAAW;;;IATjC,wEACG;IAAA,qEACO;IAAA,qEAAI;IAAA,qEAAU;IAAA,4DAAK;IACf,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IACd,qEAAI;IAAA,8DAAG;IAAA,4DAAK;IAC3B,4DAAK;IACL,+GACO;IAIR,4DAAQ;;;IALH,0DAAgC;IAAhC,wFAAgC;;ADhBlC,MAAM,YAAY;IASvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAR1C,UAAK,GAAG,KAAK,CAAC;IASd,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAI,CAAC,UAAU,GAAG,IAAY,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtE,IAAI,CAAC,YAAY,GAAG,IAAiB,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IACD,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5E,IAAI,CAAC,QAAQ,GAAG,IAAY,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE7B,CAAC,CAAC;IACJ,CAAC;IACD,OAAO,CAAC,KAAa;QACnB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iCAAiC,GAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5E,IAAI,CAAC,KAAK,GAAG,IAAY,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;;wEAvCU,YAAY;4FAAZ,YAAY;;QCRzB,yEACE;QAAA,qEACE;QAAA,sGACF;QAAA,4DAAK;QACP,4DAAM;QAEN,sEACE;QAAA,4EAA0B;QAAlB,oIAAS,WAAO,IAAC;QAAC,iEAAM;QAAA,4DAAS;QACzC,uEAAM;QAAA,uDAAkC;;QAAA,4DAAO;QACjD,4DAAM;QAEN,sEACE;QAAA,+EACA;QADY,6RAAe,sBAAkB,IAAC;QAA9C,4DACA;QAAA,qEAAG;QAAA,wDAA+B;;QAAA,4DAAI;QACxC,4DAAM;QAEN,uEACE;QAAA,6EAAoC;QAA5B,qIAAS,qBAAiB,IAAC;QAAC,yEAAa;QAAA,4DAAS;QAC1D,8GACG;QAWL,4DAAM;;QAtBE,0DAAkC;QAAlC,sKAAkC;QAKrC,0DAA+B;QAA/B,oKAA+B;QAK3B,0DAAoB;QAApB,kFAAoB;;6FDVhB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AAET;;AAexC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,uEAAa;YACb,qEAAgB;SAEjB;mIAIU,SAAS,mBAVlB,2DAAY,aAGZ,uEAAa;QACb,qEAAgB;6FAMP,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;iBAEjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  serverData: JSON;\n  employeeData: string [];\n  employee:JSON;\n  value:JSON;\n\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  ngOnInit() {\n  }\n\n  sayHi() {\n    this.httpClient.get('http://127.0.0.1:5002/').subscribe(data => {\n      this.serverData = data as JSON;\n      console.log(this.serverData);\n    })\n  }\n\n  getAllEmployees() {\n    this.httpClient.get('http://127.0.0.1:5002/employees').subscribe(data => {\n      this.employeeData = data as string [];\n      console.log(this.employeeData);\n    })\n  }\n  getEmployee() {\n    this.httpClient.get('http://127.0.0.1:5002/employee/yassar').subscribe(data => {\n      this.employee = data as JSON;\n      console.log(this.employee);\n\n    })\n  }\n  onEnter(value: string) {\n    this.httpClient.get('http://127.0.0.1:5002/employee/'+value).subscribe(data => {\n      this.value = data as JSON;\n    })\n  }\n}\n","\n<div style=\"text-align:center\">\n  <h1>\n    Welcome to Angular + Python + Flask Demo!\n  </h1>\n</div>\n\n<div>\n  <button (click)=\"sayHi()\">Say Hi</button>\n  <span>Server data: {{serverData | json}}</span>\n</div>\n\n<div>\n  <input #box (keyup.enter)=\"onEnter(box.value)\">\n  <p>Employee data: {{value | json}}</p>\n</div>\n\n<div>\n  <button (click)=\"getAllEmployees()\">All Employees</button>\n  <table *ngIf=\"employeeData\">\n     <tr>\n            <th>First Name</th>\n                <th>Last Name</th>\n                    <th>Age</th>\n     </tr>\n     <tr *ngFor=\"let abc of employeeData\">\n            <td>{{abc.First_Name}}</td>\n                <td>{{abc.Last_Name}}</td>\n                    <td>{{abc.Age}}</td>\n     </tr>\n    </table>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}